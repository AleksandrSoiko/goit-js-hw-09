{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAgBC,SAASC,cAAc,qBACvCC,EAAeF,SAASC,cAAc,oBACtCE,EAAiBH,SAASC,cAAc,sBACxCG,EAAsBJ,SAASC,cAAc,UAC7CI,EAAQ,GACd,IAAIC,EAAe,EA0BnB,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAU,IAAIC,SAAQ,CAACC,EAASC,KACdC,KAAKC,SAAW,GAEpCH,EAAQ,CAAEI,SAAAR,EAAUS,MAAAR,IAEpBI,EAAO,CAAEG,SAAAR,EAAUS,MAAAR,GAAQ,IAI/BC,EACGQ,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACjBE,EAAAtB,GAASuB,OAAOC,QACd,uBAAqBL,EAAY,QAASC,MAAU,IAGvDK,OAAM,EAACN,SAAEA,EAAQC,MAAEA,MAClBE,EAAAtB,GAASuB,OAAOG,QACd,sBAAoBP,EAAU,QAASC,MAAU,IAGpDO,SAAQ,KAsBb,IAA0BC,EArBpBpB,EAAMqB,KAAKhB,GACPiB,OAAOrB,KAAkBD,EAAMuB,SAoBfH,EAnBD,IAAIpB,GAoB3BM,QAAQkB,IAAIJ,GACTP,MAAK,SACLI,OAAM,SACNE,SAAQ,KAjBXpB,EAAoB0B,UAAW,EAC/B/B,EAAc+B,UAAW,EACzB5B,EAAa4B,UAAW,EACxB3B,EAAe2B,UAAW,EAgBtBzB,EAAM0B,OAAO,EAAG1B,EAAMuB,OAAS,EAAE,IAzBH,G,CAjDpCxB,EAAoB4B,iBAAiB,SAASC,IAC5C,GAC0B,KAAxBlC,EAAcmC,OACS,KAAvBhC,EAAagC,OACY,KAAzB/B,EAAe+B,MACf,CACAD,EAAME,iBACN,MAAMC,EAAkBjC,EAAe+B,MACvC5B,EAAe8B,GASnB,SAAgCC,EAAUpB,EAAOqB,GA6C/ClC,EAAoB0B,UAAW,EAC/B/B,EAAc+B,UAAW,EACzB5B,EAAa4B,UAAW,EACxB3B,EAAe2B,UAAW,EA9C1B,IAAK,IAAIS,EAAI,EAAGA,EAAIF,EAAUE,GAAK,EACjCC,WAAWjC,EAAeU,EAAOsB,EAAGtB,GACpCA,GAASqB,C,CAVTG,CAAuBL,EAFHT,OAAO5B,EAAcmC,OACpBP,OAAOzB,EAAagC,O,MAGzCf,EAAAtB,GAASuB,OAAOG,QAAQ,mCAAmC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Notify } from 'notiflix';\n\nconst delayValueRef = document.querySelector('input[name=delay]');\nconst stepValueRef = document.querySelector('input[name=step]');\nconst amountValueRef = document.querySelector('input[name=amount]');\nconst createPromiseButton = document.querySelector('button');\nconst ARRAY = [];\nlet testQuantity = 0;\ncreatePromiseButton.addEventListener('click', event => {\n  if (\n    delayValueRef.value !== '' &&\n    stepValueRef.value !== '' &&\n    amountValueRef.value !== ''\n  ) {\n    event.preventDefault();\n    const quantityPromise = amountValueRef.value;\n    testQuantity = quantityPromise;\n    let DELAY_PROMICE = Number(delayValueRef.value);\n    const STEP_PROMISE = Number(stepValueRef.value);\n    startGenerationPromise(quantityPromise, DELAY_PROMICE, STEP_PROMISE);\n  } else {\n    Notiflix.Notify.warning('Please fill in all the fields!!!');\n  }\n});\n\nfunction startGenerationPromise(quantity, delay, step) {\n  toNotActiveInputElement();\n  for (let i = 0; i < quantity; i += 1) {\n    setTimeout(createPromise, delay, i, delay);\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(\n        `✅ Fulfilled promise ${position + 1} in ${delay}ms`\n      );\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.warning(\n        `❌ Rejected promise ${position + 1} in ${delay}ms`\n      );\n    })\n    .finally(() => {\n      ARRAY.push(promise);\n      if (Number(testQuantity) === ARRAY.length) {\n        promiseAllResult([...ARRAY]);\n      }\n    });\n}\n\nfunction toActiveInputElement() {\n  createPromiseButton.disabled = false;\n  delayValueRef.disabled = false;\n  stepValueRef.disabled = false;\n  amountValueRef.disabled = false;\n}\n\nfunction toNotActiveInputElement() {\n  createPromiseButton.disabled = true;\n  delayValueRef.disabled = true;\n  stepValueRef.disabled = true;\n  amountValueRef.disabled = true;\n}\n\nfunction promiseAllResult(array) {\n  Promise.all(array)\n    .then(() => {})\n    .catch(() => {})\n    .finally(() => {\n      toActiveInputElement();\n      ARRAY.splice(0, ARRAY.length - 1);\n    });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$delayValueRef","document","querySelector","$47d4ff9957288465$var$stepValueRef","$47d4ff9957288465$var$amountValueRef","$47d4ff9957288465$var$createPromiseButton","$47d4ff9957288465$var$ARRAY","$47d4ff9957288465$var$testQuantity","$47d4ff9957288465$var$createPromise","position1","delay1","promise","Promise","resolve","reject","Math","random","position","delay","then","$parcel$interopDefault","Notify","success","catch","warning","finally","array","push","Number","length","all","disabled","splice","addEventListener","event","value","preventDefault","quantityPromise","quantity","step","i","setTimeout","$47d4ff9957288465$var$startGenerationPromise"],"version":3,"file":"03-promises.ccda5428.js.map"}